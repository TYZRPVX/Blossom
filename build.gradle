// Top-level build file where you can add configuration options common to all sub-projects/modules.


buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

def siteUrl = 'https://github.com/TYZRPVX/Blossom'
def gitUrl = 'git@github.com:TYZRPVX/Blossom.git'
group = "blossom"

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'Android dependence inject tool'
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'TYZRPVX'
                        name 'TYZRPVX'
                        email 'TYZRPVX@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "Blossom"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    minSdkVersion = 21
    targetSdkVersion = 23
    compileSdkVersion = 23
    buildToolsVersion = '24.0.2'
    sourceCompatibilityVersion = JavaVersion.VERSION_1_7
    targetCompatibilityVersion = JavaVersion.VERSION_1_7
}

def androidToolsVersion = '25.2.0'
def supportLibraryVersion = '23.2.1'

ext.deps = [
        // Android
        android: 'com.google.android:android:4.1.1.4',
        supportCompat: "com.android.support:appcompat-v7:$supportLibraryVersion",
        supportAnnotations: "com.android.support:support-annotations:$supportLibraryVersion",
        supportTestRunner: 'com.android.support.test:runner:0.5',
        androidGradle: 'com.android.tools.build:gradle:2.2.0',
        lint: "com.android.tools.lint:lint:$androidToolsVersion",
        lintApi: "com.android.tools.lint:lint-api:$androidToolsVersion",
        lintChecks: "com.android.tools.lint:lint-checks:$androidToolsVersion",
        lintTests: "com.android.tools.lint:lint-tests:$androidToolsVersion",

        // Square
        javapoet: 'com.squareup:javapoet:1.7.0',

        // Third Party
        javaparser: 'com.github.javaparser:javaparser-core:2.4.0',
        logUtils: 'com.apkfuns.logutils:library:1.4.2',

        // Test dependencies
        junit: 'junit:junit:4.12',
        truth: 'com.google.truth:truth:0.28',
        robolectric: 'org.robolectric:robolectric:3.1.2',
        openglApi: 'org.khronos:opengl-api:gl1.1-android-2.1_r1',
        compiletesting: 'com.google.testing.compile:compile-testing:0.9',
        autoservice: 'com.google.auto.service:auto-service:1.0-rc2',
        autocommon: 'com.google.auto:auto-common:0.6',

        // Blossom
        blossomCore: project(':blossom'),
        blossomAnno: project(':blossom-annotations'),
        blossomCompiler: project(':blossom-compiler'), // apt
]